La classe `Admin` est conçue pour gérer les informations et les opérations liées aux administrateurs dans la
base de données MongoDB. Voici une description détaillée de ses attributs et méthodes :

- **Attributs** :
  - `email` : Un attribut de chaîne qui stocke l'email de l'administrateur.
  - `password` : Un attribut de chaîne qui stocke le mot de passe de l'administrateur. Ce mot de passe est 
  prévu pour être stocké sous forme hachée pour des raisons de sécurité.
  - `_id` : Un attribut optionnel qui stocke l'identifiant unique de l'administrateur dans la base de données. 
  Cet identifiant est du type `ObjectId` de MongoDB.

- **Méthodes d'instance** :
  - `__init__` : Le constructeur de la classe qui initialise une instance de `Admin` avec l'email, le mot de passe 
  et optionnellement l'identifiant.
  - `to_dict` : Convertit les informations de l'administrateur en un dictionnaire qui peut être utilisé pour 
  l'insertion ou la mise à jour dans la base de données.
  - `from_dict` : Initialise l'instance de l'administrateur avec les données d'un dictionnaire, utilisé 
  typiquement lors de la récupération de données de la base.
  - `create` : Enregistre un nouvel administrateur dans la base de données après avoir haché le mot de passe. 
  Elle vérifie également si l'administrateur existe déjà pour éviter les doublons.
  - `update` : Met à jour les informations d'un administrateur existant dans la base de données en utilisant 
  son identifiant. Si le mot de passe est différent, il est d'abord haché avant la mise à jour.

- **Méthodes de classe (@classmethod)** :
  - `find_one` : Récupère un administrateur de la base de données en utilisant son identifiant `_id` 
  et retourne une instance de `Admin` si trouvé.
  - `find_one_by_email` : Recherche un administrateur par email et retourne une instance de `Admin` si trouvé.
  - `find_all` : Récupère tous les administrateurs de la base de données et retourne une liste d'instances 
  de `Admin`.
  - `delete` : Supprime un administrateur de la base de données en utilisant son identifiant `_id`.

La classe `Admin` inclut une gestion des erreurs pour chaque opération de base de données, imprimant les 
exceptions et retournant `False` ou `None` si une opération échoue. Elle est essentielle pour la gestion des 
administrateurs dans l'application, permettant la création, la recherche, la mise à jour et la suppression 
de données dans le système.